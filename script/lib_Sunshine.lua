module("Sunshine",package.seeall);
TANK_WEIGHT = {0, 1.1, 0.5};
TANK_BORDER = 0.5;
HP_WEIGHT = {1.1, 0, 0.4};
HP_BORDER = 0.3;
SHOT_SOUND_SIGNAL = {158.98782552083,160.59016927083,162.66907552083,165.05735677083,168.03248697917,171.56243489583,175.15436197917,178.77610677083,182.4306640625,186.13151041667,189.85071614583,193.63079427083,197.44296875,201.28216145833,205.181640625,209.10598958333,213.07955729167,217.1087890625,221.11328125,225.21959635417,229.29661458333,233.44446614583,237.64869791667,241.8625,246.12135416667,250.47024739583,254.821875,259.19928385417,263.6251953125,268.12395833333,272.62923177083,276.95553385417,281.25188802083,285.25572916667,288.6625,291.29108072917,293.12180989583,294.1255859375,294.595703125,294.62565104167,294.49928385417,294.1705078125,293.77200520833,293.25774739583,292.63802083333,291.88899739583,291.09029947917,290.10670572917,288.9978515625,287.77141927083,286.39075520833,284.76888020833,282.99173177083,280.9443359375,278.67395833333,276.12708333333,273.70944010417,272.20546875,272.47923177083,275.3548828125,281.48092447917,290.9421875,303.03151041667,316.81256510417,331.37897135417,346.03684895833,360.35071614583,374.25084635417,387.898046875,401.29251302083,414.5474609375,427.64518229167,440.6412109375,453.61158854167,466.34440104167,478.7517578125,490.0595703125,499.23294270833,505.30084635417,507.3048828125,504.79733072917,498.15436197917,488.16263020833,475.65110677083,461.27467447917,445.5861328125,428.58014322917,410.07408854167,389.76744791667,367.19739583333,341.95,314.16803385417,285.16197916667,256.75149739583,231.1982421875,210.88548177083,197.15104166667,189.49739583333,186.64615885417,186.947265625,188.82233072917,190.95208333333,193.06985677083,195.24127604167,197.85442708333,202.01295572917,208.69505208333,218.83235677083,233.26497395833,251.98756510417,273.9345703125,297.75794270833,322.3216796875,346.62233072917,370.0775390625,392.5373046875,413.35970052083,431.66842447917,446.25045572917,455.94811197917,459.97682291667,458.42740885417,452.13971354167,442.1666015625,429.31009114583,414.63932291667,399.205078125,384.81731770833,373.3087890625,366.7423828125,366.7298828125,373.42434895833,385.378515625,400.8736328125,417.92552083333,434.2361328125,447.6625,456.50885416667,459.25794270833,454.50657552083,441.76614583333,421.50729166667,394.34375,361.72578125,326.23365885417,290.708984375,258.140625,231.54576822917,213.02135416667,202.1302734375,198.23326822917,202.40696614583,215.81028645833,239.72877604167,276.19596354167,325.55846354167,384.2865234375,446.930078125,507.31920572917,559.01334635417,596.86197916667,617.611328125,619.80826822917,605.26126302083,578.42760416667,545.50748697917,513.25950520833,488.31634114583,475.15501302083,474.28567708333,482.21458333333,493.75345052083,503.23736979167,504.99694010417,495.35787760417,474.26184895833,444.54381510417,410.10201822917,375.24381510417,344.3060546875,321.20436197917,309.3109375,311.16002604167,328.18203125,361.4560546875,408.38938802083,460.83352864583,509.11588541667,544.53828125,558.93587239583,549.3474609375,521.1900390625,483.57337239583,445.65182291667,416.47630208333,400.76380208333,396.983984375,400.72265625,407.24322916667,411.8669921875,412.24095052083,408.21302083333,402.50625,401.7953125,412.79869791667,440.85735677083,488.3146484375,549.869140625,610.50930989583,653.43287760417,666.29518229167,644.99622395833,596.20501302083,535.57376302083,481.78782552083,448.730078125,440.79759114583,454.42630208333,481.08873697917,510.180078125,534.74049479167,554.44954427083,572.63391927083,592.40631510417,612.99733072917,627.04954427083,624.12552083333,597.32942708333,548.30319010417,489.86940104167,442.80045572917,424.29954427083,439.89095052083,483.1521484375,539.128515625,591.27825520833,628.9892578125,649.47662760417,653.58854166667,642.1203125,614.2744140625,571.31751302083,521.98821614583,482.6076171875,467.86588541667,482.57604166667,521.97291666667,573.20130208333,617.85631510417,641.94049479167,644.7548828125,632.2232421875,609.5255859375,585.62877604167,573.4751953125,579.9705078125,603.14036458333,638.39661458333,677.72903645833,707.641015625,720.7328125,723.06744791667,724.52688802083,733.70546875,757.3666015625,789.88880208333,814.99401041667,820.77311197917,800.55670572917,752.7646484375,691.19993489583,639.43346354167,613.68118489583,616.199609375,634.49635416667,650.71927083333,653.75462239583,639.67415364583,612.37727864583,590.503515625,594.152734375,620.0630859375,646.77955729167,663.01783854167,669.66829427083,662.77740885417,644.442578125,634.246484375,641.8681640625,651.19270833333,651.42923177083,651.69811197917,652.591015625,646.03548177083,640.96888020833,644.93346354167,644.208203125,636.34427083333,634.36015625,632.85885416667,624.8068359375,620.12194010417,618.2712890625,613.52473958333,614.95924479167,622.47623697917,627.6375,631.51067708333,631.8,626.09303385417,621.31399739583,619.884765625,619.36302083333,619.49029947917,620.18125,626.28470052083,641.4369140625,662.14733072917,689.91080729167,727.6791015625,770.93092447917,809.9521484375,836.34609375,849.50169270833,849.99765625,833.27916666667,802.50143229167,778.55227864583,773.36477864583,775.5841796875,779.84563802083,797.84680989583,824.040234375,836.42975260417,840.62330729167,852.86295572917,862.726953125,861.1275390625,867.06223958333,882.26100260417,889.88977864583,899.36399739583,919.25703125,932.24108072917,940.940625,961.589453125,981.04348958333,994.52532552083,1014.6610677083,1033.9714192708,1045.0681640625,1056.3975911458,1067.2815104167,1073.683984375,1078.3565104167,1079.2152994792,1073.0505859375,1061.6709635417,1049.127734375,1037.5818359375,1025.8587239583,1017.2435546875,1015.5104166667,1012.90625,1005.6961588542,999.55149739583,993.94680989583,984.29368489583,975.99830729167,975.27884114583,976.65846354167,976.4384765625,978.2318359375,983.05618489583,987.06770833333,991.85774739583,999.695703125,1005.9514973958,1007.3958984375,1004.1961588542,998.44772135417,990.69967447917,983.7625,979.72467447917,977.86796875,976.74147135417,974.68352864583,970.39772135417,962.87421875,952.73645833333,939.97486979167,925.67265625,911.26204427083,898.362890625,888.04231770833,880.11256510417,875.16705729167,870.4369140625,862.57962239583,853.23880208333,841.20013020833,824.71653645833,811.78561197917,803.9541015625,793.68430989583,785.70299479167,784.4767578125,781.305078125,774.91015625,771.81393229167,771.03932291667,769.60208333333,767.36087239583,763.51998697917,755.492578125,737.13196614583,705.28359375,666.35540364583,626.61497395833,588.94934895833,558.4353515625,537.8171875,522.47291666667,507.46861979167,491.85592447917,474.35227864583,453.10638020833,428.97109375,403.63938802083,376.83678385417,350.01380208333,326.46471354167,307.26959635417,291.66783854167,278.90319010417,268.24544270833,258.9814453125,250.47565104167,242.0541015625,233.67454427083,225.1865234375,216.08372395833,206.6369140625,197.72819010417,189.933203125,183.25234375,176.66204427083,170.06061197917,164.33828125,158.9697265625,153.3849609375,148.612890625,144.49309895833,139.85950520833,134.58776041667,128.67220052083,121.69967447917,113.64908854167,104.63098958333,95.2337890625,86.635091145833,79.291536458333,73.369270833333,69.3130859375,66.700651041667,64.3791015625,61.8646484375,59.078776041667,55.5552734375,51.2474609375,46.7873046875,42.5052734375,38.2126953125,34.064713541667,30.3763671875,26.864192708333,23.412434895833,20.272721354167,17.4021484375,14.663802083333,12.22421875,10.259114583333,8.687890625,7.5611979166667,6.8667317708333,6.4650390625,6.2367838541667,6.1067708333333,6.0330729166667,5.9005859375,5.7477864583333,5.603125,5.4046875,5.1984375,5.001953125,4.8063151041667,4.6012369791667,4.434375,4.3134114583333,4.2240234375,4.1876953125,4.2037760416667,4.2520833333333,4.284765625,4.3611328125,4.4332682291667,4.4831380208333,4.5257161458333,4.5527994791667,4.5654296875,4.5461588541667,4.5396484375};
-- RGBの加重平均を二値化するメソッド 
-- bool function(Num, Num, Num, {Num}, Num) 
function Parse(r, g, b, weight, border)
    local l = ( 0.298912 * weight[1] * r + 0.586611 * weight[2] * g + 0.114478 * weight[3] *  b );
    if l < 255 * border then
        return false;
    else
        return true;
    end
    Debug.Log("EXCEPTION in Parse");
end
-- Parseメソッドのラッパー，タンク係数を与える
-- bool function(Nun, Nun, Num)
function TankParse(r, g, b)
    return Parse(r, g, b, TANK_WEIGHT, TANK_BORDER);
end
-- Parseメソッドのラッパー，HP係数を与える
-- bool function(Nun, Nun, Num)
function HpParse(r, g, b)
    return Parse(r, g, b, HP_WEIGHT, HP_BORDER);
end
-- 放水音の特性曲線
-- {Num} function(Nun, Num, Num)
function ShotSoundBorderFunc(start, stop, length)
    local SHIFT_X = 290;
    local SHIFT_Y = 290;
    local ys = {};
    for i=1,length do
        local x = start + (stop-start)/length * (i-1);
        if i < length*0.7 then
            ys[i] = 0;
        else
            --ys[i] = -0.01*math.pow(x-SHIFT_Y,2)+SHIFT_Y;
            ys[i] = SHOT_SOUND_SIGNAL[i];
            if ys[i] < 0 then ys[i] = 0 end
        end
    end
    return ys;
end